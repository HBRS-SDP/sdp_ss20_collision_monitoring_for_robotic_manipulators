.TH "ArmController" 3 "Wed Jun 24 2020" "Collision monitoring for robotic manipulators" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ArmController \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBArmController\fP (\fBMonitor\fP *monitorObject, double k, double d, double gamma, double beta)"
.br
.ti -1c
.RI "\fB~ArmController\fP ()"
.br
.RI "\fI\fBKinovaArm\fP Destructor\&. \fP"
.ti -1c
.RI "void \fBarmCallback\fP (const sensor_msgs::JointState::ConstPtr &msg)"
.br
.ti -1c
.RI "void \fBgoalCallback\fP (const geometry_msgs::Point::ConstPtr &msg)"
.br
.ti -1c
.RI "KDL::Twist \fBcontrolLoop\fP (void)"
.br
.ti -1c
.RI "Eigen::Vector3d \fBobstaclePotentialField\fP (Eigen::Vector3d currentPosition, Eigen::Vector3d velocity)"
.br
.ti -1c
.RI "void \fBupdateObstacles\fP (const visualization_msgs::Marker::ConstPtr &msg)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBMonitor\fP * \fBmonitor\fP"
.br
.ti -1c
.RI "Eigen::Vector3d \fBgoal\fP"
.br
.ti -1c
.RI "std::vector< \fBRvizObstacle\fP * > \fBrvizObstacles\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 41 of file arm_controller\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "ArmController::ArmController (\fBMonitor\fP * monitorObject, double k, double d, double gamma, double beta)"
\fBKinovaArm\fP constructor
.PP
\fBParameters:\fP
.RS 4
\fImonitorObject\fP The monitor instance used to get the distance from the arm to any obstacles 
.RE
.PP
\fBReturns:\fP
.RS 4
An instance of CollisionMonitor class 
.RE
.PP

.PP
Definition at line 5 of file arm_controller\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "void ArmController::armCallback (const sensor_msgs::JointState::ConstPtr & msg)"
Callback function updating the arm positions
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP The ros sensor messsage containing the joint angles 
.RE
.PP

.PP
Definition at line 46 of file arm_controller\&.cpp\&.
.SS "KDL::Twist ArmController::controlLoop (void)"
Function that uses internal parameters to send instructions to arm 
.PP
Definition at line 163 of file arm_controller\&.cpp\&.
.SS "void ArmController::goalCallback (const geometry_msgs::Point::ConstPtr & msg)"
Callback function updating goal position of the arms endeffector
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP The ros sensor messsage containing the goal position 
.RE
.PP

.PP
Definition at line 51 of file arm_controller\&.cpp\&.
.SS "void ArmController::updateObstacles (const visualization_msgs::Marker::ConstPtr & msg)"
A function that updates the obstacle poses or adds one if it doesn't exist 
.PP
Definition at line 227 of file arm_controller\&.cpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Collision monitoring for robotic manipulators from the source code\&.
