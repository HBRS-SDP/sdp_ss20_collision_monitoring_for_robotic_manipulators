.TH "Capsule" 3 "Wed Jun 24 2020" "Collision monitoring for robotic manipulators" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Capsule \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <primitives\&.h>\fP
.PP
Inherits \fBPrimitive\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCapsule\fP (Eigen::Matrix4d \fBpose\fP, double length, double radius)"
.br
.ti -1c
.RI "\fBCapsule\fP (\fBCapsule\fP *capsule)"
.br
.ti -1c
.RI "float \fBgetLength\fP ()"
.br
.ti -1c
.RI "float \fBgetRadius\fP ()"
.br
.ti -1c
.RI "void \fBgetShortestDirection\fP (Eigen::Vector3d &shortestDirection, \fBPrimitive\fP *primitive)"
.br
.ti -1c
.RI "void \fBgetShortestDirection\fP (Eigen::Vector3d &shortestDirection, \fBCapsule\fP *capsule)"
.br
.ti -1c
.RI "void \fBgetShortestDirection\fP (Eigen::Vector3d &shortestDirection, \fBSphere\fP *sphere)"
.br
.ti -1c
.RI "double \fBgetShortestDistance\fP (\fBPrimitive\fP *primitive)"
.br
.ti -1c
.RI "double \fBgetShortestDistance\fP (\fBCapsule\fP *capsule)"
.br
.ti -1c
.RI "double \fBgetShortestDistance\fP (\fBSphere\fP *sphere)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "float \fBlength\fP"
.br
.ti -1c
.RI "float \fBradius\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
The \fBCapsule\fP class\&. A cylinder with two half spheres at both ends\&.
.PP
This class is a shape that inherits from primitive\&. It's similar to a cylinder containing half spheres in the ends, making a capsule\&. 
.PP
Definition at line 204 of file primitives\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Capsule::Capsule (Eigen::Matrix4d pose, double length, double radius)"
Constructor of \fBCapsule\fP class
.PP
\fBParameters:\fP
.RS 4
\fIpose\fP start point of the line represented with a Matrix4d\&. 
.br
\fIlength\fP length of the capsule 
.br
\fIradius\fP radius of the capsule 
.RE
.PP

.PP
Definition at line 119 of file primitives\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "float Capsule::getLength ()"
Getter of length
.PP
\fBReturns:\fP
.RS 4
the length of the capsule 
.RE
.PP

.PP
Definition at line 135 of file primitives\&.cpp\&.
.SS "float Capsule::getRadius ()"
Getter of radius
.PP
\fBReturns:\fP
.RS 4
the radius of the capsule 
.RE
.PP

.PP
Definition at line 139 of file primitives\&.cpp\&.
.SS "void Capsule::getShortestDirection (Eigen::Vector3d & shortestDirection, \fBPrimitive\fP * primitive)\fC [virtual]\fP"
Performs a dynamic cast to overload the direction functions
.PP
This method takes an object that inherits from primitive and performs a dynamic cast to call the correct getShortestDirection method depending on the class of the shape\&.
.PP
\fBParameters:\fP
.RS 4
\fIprimitive\fP address of the primitive object\&. 
.br
\fIshortestDirection\fP a vector in 3D that represents the closes direction between this and the second primitive\&. 
.RE
.PP

.PP
Implements \fBPrimitive\fP\&.
.PP
Definition at line 143 of file primitives\&.cpp\&.
.SS "void Capsule::getShortestDirection (Eigen::Vector3d & shortestDirection, \fBCapsule\fP * capsule)\fC [virtual]\fP"
Finds the shortest distance between this primitive and a \fBCapsule\fP primitive
.PP
This method takes a capsule object and returns the closest direction between this primitive and a capsule object\&.
.PP
\fBParameters:\fP
.RS 4
\fIcapsule\fP address of the primitive object 
.br
\fIshortestDirection\fP a vector in 3D that represents the closes direction between the primitive and capsule 
.RE
.PP

.PP
Implements \fBPrimitive\fP\&.
.PP
Definition at line 157 of file primitives\&.cpp\&.
.SS "void Capsule::getShortestDirection (Eigen::Vector3d & shortestDirection, \fBSphere\fP * sphere)\fC [virtual]\fP"
Finds the shortest distance between this primitive and a \fBSphere\fP primitive
.PP
This method takes a capsule object and returns the closest direction between this primitive and a sphere object\&. returns a Vector3d\&.
.PP
\fBParameters:\fP
.RS 4
\fIsphere\fP address of the primitive object 
.br
\fIshortestDirection\fP a vector in 3D that represents the closes direction between the primitive and sphere 
.RE
.PP

.PP
Implements \fBPrimitive\fP\&.
.PP
Definition at line 232 of file primitives\&.cpp\&.
.SS "double Capsule::getShortestDistance (\fBPrimitive\fP * primitive)\fC [virtual]\fP"
Performs a dynamic cast to overload the distance functions
.PP
This method takes an object that inherits from primitive and performs a dynamic cast to call the correct getShortestDistance method depending on the class of the shape\&. returns a double value\&.
.PP
\fBParameters:\fP
.RS 4
\fIprimitive\fP address of the primitive object\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
the closest distance between this and the second primitive\&. 
.RE
.PP

.PP
Implements \fBPrimitive\fP\&.
.PP
Definition at line 248 of file primitives\&.cpp\&.
.SS "double Capsule::getShortestDistance (\fBCapsule\fP * capsule)\fC [virtual]\fP"
Finds the shortest distance between this primitive and a \fBCapsule\fP primitive
.PP
This method takes a capsule object and returns the closest distance between this primitive and a capsule object\&. returns a double value\&.
.PP
\fBParameters:\fP
.RS 4
\fIcapsule\fP address of the primitive object 
.RE
.PP
\fBReturns:\fP
.RS 4
the closest distance between the primitive and capsule 
.RE
.PP

.PP
Implements \fBPrimitive\fP\&.
.PP
Definition at line 262 of file primitives\&.cpp\&.
.SS "double Capsule::getShortestDistance (\fBSphere\fP * sphere)\fC [virtual]\fP"
Finds the shortest distance between this primitive and a \fBSphere\fP primitive
.PP
This method takes a capsule object and returns the closest distance between this primitive and a sphere object\&. returns a double value\&.
.PP
\fBParameters:\fP
.RS 4
\fIsphere\fP address of the primitive object 
.RE
.PP
\fBReturns:\fP
.RS 4
the closest distance between the primitive and sphere 
.RE
.PP

.PP
Implements \fBPrimitive\fP\&.
.PP
Definition at line 272 of file primitives\&.cpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Collision monitoring for robotic manipulators from the source code\&.
